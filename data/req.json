{
  "evaluation_uuid": "1c9f5b69-a295-475f-acaf-8a1e00cb0747",
  "request": {
    "submission": "#include <bits/stdc++.h>\n\nusing namespace std;\nusing ll = long long;\nusing ii = pair<ll,ll>;\n\nbool ok(ll y, ll x, ll n, ll m, ll k, vector<string>& matrix) {\n    if(y < 0 || y+k > n || x < 0 || x+k > m) return false;\n    ll count=0;\n    for(ll i=0;i<k;i++){\n        for(ll j=0;j<k;j++){\n            if(matrix[y+i][x+j]=='X') count++;\n        }\n    }\n    return count<=((k*k)/2);\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n\n    ll n, m, k;\n    cin>>n>>m>>k;\n\n    vector<string> matrix;\n    matrix.resize(n);\n\n    for(ll i=0;i<n;i++) {\n        cin>>matrix[i];\n    }\n\n    ii A = {-1,-1}, B = {-1,-1};\n    for(ll i=0;i<n;i++){\n        for(ll j=0;j<m;j++){\n            if(matrix[i][j] == 'A') {\n                A = {i,j};\n            }\n            if(matrix[i][j] == 'B') {\n                B = {i,j};\n            }\n        }\n    }\n    assert(A.first != -1 && B.first != -1);\n\n    assert(ok(A.first, A.second, n, m, k, matrix));\n\n    vector<vector<ll>> dist(n, vector<ll>(m, -1));\n    queue<ii> q;\n    q.push(A);\n    dist[A.first][A.second] = 0;\n\n    const ll dx[] = {1,0,-1,0};\n    const ll dy[] = {0,1,0,-1};\n    while(!q.empty()){\n        ii v = q.front();\n        q.pop();\n        for(ll i=0;i<4;i++){\n            ll x = v.second + dx[i];\n            ll y = v.first + dy[i];\n            if(ok(y,x,n,m,k,matrix) && dist[y][x] == -1){\n                dist[y][x] = dist[v.first][v.second] + 1;\n                q.push({y,x});\n            }\n        }\n    }\n\n    const ll INF = 1e18;\n    ll res = INF;\n    for(ll i=0;i<k;i++){\n        for(ll j=0;j<k;j++){\n            ll y=B.first-i;\n            ll x=B.second-j;\n            if(y<0||x<0) continue;\n            if(dist[y][x] != -1) {\n                res = min(res, dist[y][x]);\n            }\n        }\n    }\n    if(res == INF) {\n        cout<<\"-1\\n\";\n    } else {\n        cout<<res<<\"\\n\";\n    }\n}\n",
    "language": {
      "id": "cpp17",
      "name": "C++17 (GCC)",
      "code_filename": "main.cpp",
      "compile_cmd": "g++ -std=c++17 -o main main.cpp",
      "compiled_filename": "main",
      "exec_cmd": "./main"
    },
    "limits": {
      "cpu_time_millis": 500,
      "memory_kibibytes": 262144
    },
    "tests": [
      {
        "id": 1,
        "input_sha256": "358b7c2d614aca4f5d5bb5430deb56a0eb1bfd990f9356a814fa463a188506f2",
        "input_s3_uri": "s3://proglv-tests/358b7c2d614aca4f5d5bb5430deb56a0eb1bfd990f9356a814fa463a188506f2.zst",
        "input_content": null,
        "input_http_url": null,
        "answer_sha256": "9a271f2a916b0b6ee6cecb2426f0b3206ef074578be55d9bc94f6f3fe3ab86aa",
        "answer_s3_uri": "s3://proglv-tests/9a271f2a916b0b6ee6cecb2426f0b3206ef074578be55d9bc94f6f3fe3ab86aa.zst",
        "answer_content": null,
        "answer_http_url": null
      },
      {
        "id": 2,
        "input_sha256": "ae7b67ae38df1e06357def0b7e51fc63cb085bbfd9187b24649b8d43e7179c2b",
        "input_s3_uri": "s3://proglv-tests/ae7b67ae38df1e06357def0b7e51fc63cb085bbfd9187b24649b8d43e7179c2b.zst",
        "input_content": null,
        "input_http_url": null,
        "answer_sha256": "06e9d52c1720fca412803e3b07c4b228ff113e303f4c7ab94665319d832bbfb7",
        "answer_s3_uri": "s3://proglv-tests/06e9d52c1720fca412803e3b07c4b228ff113e303f4c7ab94665319d832bbfb7.zst",
        "answer_content": null,
        "answer_http_url": null
      },
      {
        "id": 3,
        "input_sha256": "45a3c1c93c88441f824b47eb6ea79fb6487e69180f35ffb781c795529a551c00",
        "input_s3_uri": "s3://proglv-tests/45a3c1c93c88441f824b47eb6ea79fb6487e69180f35ffb781c795529a551c00.zst",
        "input_content": null,
        "input_http_url": null,
        "answer_sha256": "ee3aa64bb94a50845d5024cd4bd20202a4567aed5cd5328c0d97e9920775fc28",
        "answer_s3_uri": "s3://proglv-tests/ee3aa64bb94a50845d5024cd4bd20202a4567aed5cd5328c0d97e9920775fc28.zst",
        "answer_content": null,
        "answer_http_url": null
      }
    ],
    "testlib_checker": "#include \"testlib.h\"\n\nusing namespace std;\n\nint main(int argc, char *argv[]) {\n    setName(\"compare sequences of tokens\");\n    registerTestlibCmd(argc, argv);\n\n    int n = 0;\n    string j, p;\n\n    while (!ans.seekEof() && !ouf.seekEof()) {\n        n++;\n\n        ans.readWordTo(j);\n        ouf.readWordTo(p);\n\n        if (j != p)\n            quitf(_wa, \"%d%s words differ - expected: '%s', found: '%s'\", n, englishEnding(n).c_str(),\n                  compress(j).c_str(), compress(p).c_str());\n    }\n\n    if (ans.seekEof() && ouf.seekEof()) {\n        if (n == 1)\n            quitf(_ok, \"\\\"%s\\\"\", compress(j).c_str());\n        else\n            quitf(_ok, \"%d tokens\", n);\n    } else {\n        if (ans.seekEof())\n            quitf(_wa, \"Participant output contains extra tokens\");\n        else\n            quitf(_wa, \"Unexpected EOF in the participants output\");\n    }\n}\n"
  }
}